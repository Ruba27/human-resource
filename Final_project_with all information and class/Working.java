/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examples;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Locale;

/**
 *
 * @author User
 */
public class Working extends HumanResource {

    /**
     * Creates new form working1date
     */
    public Working() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        id = new javax.swing.JLabel();
        insert = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        workingdate = new javax.swing.JLabel();
        id1 = new javax.swing.JTextField();
        workingchooser = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        selct1 = new javax.swing.JLabel();
        selectWhat = new javax.swing.JTextField();
        condition1 = new javax.swing.JLabel();
        condition = new javax.swing.JTextField();
        select = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(828, 770));

        id.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        id.setText("ID");

        insert.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        insert.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Desktop\\Capture.PNG")); // NOI18N
        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Desktop\\d.PNG")); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Desktop\\up.PNG")); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        workingdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        workingdate.setText("Working-date");

        id1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id1ActionPerformed(evt);
            }
        });

        workingchooser.setDateFormatString("yyyy-MM-dd");

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        selct1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        selct1.setText("Select what?");

        selectWhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectWhatActionPerformed(evt);
            }
        });

        condition1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        condition1.setText("Condition Select");

        select.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        select.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\Desktop\\se.PNG")); // NOI18N
        select.setText("Select");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(selct1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(condition1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(condition, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectWhat, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(select))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(id1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(workingdate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(workingchooser, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(id)
                        .addComponent(id1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(workingdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(workingchooser, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(selct1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectWhat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(condition1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(condition, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// these buutonn to inert new value to table employee
    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        insertWorking();
    }//GEN-LAST:event_insertActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        deleteWorking();
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        updateWorking();
        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void id1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id1ActionPerformed

    private void selectWhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectWhatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectWhatActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed

        selectWorking();
    }//GEN-LAST:event_selectActionPerformed

    public void insertWorking() {
        Statement stmt;// define statment to make connect to sql

        try {
            Class.forName("com.mysql.jdbc.Driver");

            String url = "jdbc:mysql://localhost:3306/human-resource";
            // to connect to my sql
            //database schema name: human-resource

            Connection con = DriverManager.getConnection(url, "root", "16121990");
            //put user name and password
            //username : root
            //password : 16121990
            stmt = con.createStatement(); // start connection

            SimpleDateFormat formatingDate = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());  // to make date formatilng like :1990-12-16
            String workingDate = formatingDate.format(workingchooser.getDate());
            stmt.executeUpdate("INSERT INTO workingdate(startworking)" + " VALUES ('" + workingDate + "')");
            // the obove stamteent to insert to table at my sql
            con.close();// close connection
        } catch (Exception ee) {
            System.out.println(ee.toString());
        }        // TODO add your handling code here:
    }

    public void deleteWorking() {
        Statement stmt;// define statment to make connect to sql

        try {
            Class.forName("com.mysql.jdbc.Driver");

            String url = "jdbc:mysql://localhost:3306/human-resource";
            // to connect to my sql
            //database schema name: human-resource

            Connection con = DriverManager.getConnection(url, "root", "16121990");
            // put user name and password
            //username : root
            //password : 16121990

            stmt = con.createStatement();// start connection

            String workingID; // define ID working1date
            workingID = this.id1.getText(); // take id working1date from text field

            stmt.executeUpdate("Delete From workingdate Where wid =('" + workingID + "')");
            // these stamtement to delete the date according to id
            con.close();// close connection
        } catch (Exception ee) {
            System.out.println(ee.toString());
        }        // TODO add your handling code here:

    }

    public void updateWorking() {
        Statement stmt;// define statment to make connect to sql

        try {
            Class.forName("com.mysql.jdbc.Driver");

            String url = "jdbc:mysql://localhost:3306/human-resource";
            // to connect to my sql
            //database schema name: human-resource

            Connection con = DriverManager.getConnection(url, "root", "16121990");
            // put user name and password
            //username : root
            //password : 16121990

            stmt = con.createStatement(); // start connection

            String workingID; //define id working1date
            workingID = this.id1.getText();// get id from text filed
            SimpleDateFormat formatingDate = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());// to make date formatilng like :1990-12-16
            String working1date = formatingDate.format(workingchooser.getDate());// make chooser date at frame

            stmt.executeUpdate("update workingdate set startworking = ('" + working1date + "')where wid=('" + workingID + "')");// these stamtement to update information
            con.close();// close connection
        } catch (Exception ee) {
            System.out.println(ee.toString());
        }        // TODO add your handling code here:

    }

    public void selectWorking() {
        Statement stmt;// define statment to make connect to sql

        try {
            Class.forName("com.mysql.jdbc.Driver");

            String url = "jdbc:mysql://localhost:3306/human-resource";
            // to connect to my sql
            //database schema name: human-resource

            Connection con = DriverManager.getConnection(url, "root", "16121990"); // put user name and password
            //username : root
            //password : 16121990

            stmt = con.createStatement();// start connection
            String selection, selectCondition;// define string selection and condition select
            selection = selectWhat.getText();//what coloums need select (name or id ir anther things )
            selectCondition = condition.getText();//what condition need
            ResultSet querySelect;// define the result set of a database query
            querySelect = stmt.executeQuery("select " + selection + " from workingdate where " + selectCondition + "");// condition to make slect
            ResultSetMetaData resultData = querySelect.getMetaData();//get metadata from the ResultSet object(query_select).

            String selectionResult = "";
            // to check result at qulery
            while (querySelect.next()) {
                for (int coloums = 1; coloums < resultData.getColumnCount() + 1; coloums++) {// check coloum coloum
                    selectionResult += querySelect.getObject(coloums).toString() + " - " + "\n";

                }
                String finalSelection = "";
                finalSelection = selectionResult + "\n==========================\n";//} // the final reault

                area.append(finalSelection);// the result appear in text arear
            }

            con.close();// close connection

        } catch (Exception ee) {
            System.out.println(ee.toString());
        }
        // TODO add your handling code here:

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Working.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Working.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Working.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Working.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Working().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JTextField condition;
    private javax.swing.JLabel condition1;
    private javax.swing.JButton delete;
    private javax.swing.JLabel id;
    private javax.swing.JTextField id1;
    private javax.swing.JButton insert;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel selct1;
    private javax.swing.JButton select;
    private javax.swing.JTextField selectWhat;
    private javax.swing.JButton update;
    private com.toedter.calendar.JDateChooser workingchooser;
    private javax.swing.JLabel workingdate;
    // End of variables declaration//GEN-END:variables
}
